{"ast":null,"code":"import _asyncToGenerator from \"D:/ai-recruiter/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { InterviewService } from '../services/interview.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/interview.service\";\nconst _c0 = [\"videoElement\"];\nexport let InterviewComponent = /*#__PURE__*/(() => {\n  class InterviewComponent {\n    constructor(router, interviewService) {\n      this.router = router;\n      this.interviewService = interviewService;\n      this.questions = ['Tell us about yourself', 'What are your greatest strengths?', 'Where do you see yourself in 5 years?', 'Why should we hire you?', 'What is your biggest achievement?', 'How do you handle stress?', 'What are your salary expectations?', 'Why do you want to work here?'];\n      this.currentQuestionIndex = 0;\n      this.selectedQuestions = [];\n      this.timeRemaining = 60;\n      this.mediaStream = null;\n    }\n    ngOnInit() {\n      this.selectRandomQuestions();\n      this.startTimer();\n      this.setupCamera();\n    }\n    selectRandomQuestions() {\n      this.selectedQuestions = this.questions.sort(() => 0.5 - Math.random()).slice(0, 5);\n    }\n    startTimer() {\n      this.timeRemaining = 60;\n      this.timerInterval = setInterval(() => {\n        this.timeRemaining--;\n        if (this.timeRemaining <= 0) {\n          this.nextQuestion();\n        }\n      }, 1000);\n    }\n    nextQuestion() {\n      clearInterval(this.timerInterval);\n      if (this.currentQuestionIndex < 4) {\n        this.currentQuestionIndex++;\n        this.startTimer();\n      } else {\n        this.endInterview();\n      }\n    }\n    endInterview() {\n      if (this.mediaStream) {\n        this.mediaStream.getTracks().forEach(track => track.stop());\n      }\n      this.router.navigate(['/interview-complete']);\n    }\n    setupCamera() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          _this.mediaStream = yield navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: true\n          });\n          _this.videoElement.nativeElement.srcObject = _this.mediaStream;\n        } catch (err) {\n          console.error('Failed to setup camera:', err);\n          alert('Failed to access camera. Please check your permissions.');\n        }\n      })();\n    }\n    ngOnDestroy() {\n      clearInterval(this.timerInterval);\n      if (this.mediaStream) {\n        this.mediaStream.getTracks().forEach(track => track.stop());\n      }\n    }\n    static {\n      this.ɵfac = function InterviewComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || InterviewComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.InterviewService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: InterviewComponent,\n        selectors: [[\"app-interview\"]],\n        viewQuery: function InterviewComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.videoElement = _t.first);\n          }\n        },\n        decls: 13,\n        vars: 3,\n        consts: [[\"videoElement\", \"\"], [1, \"interview-container\"], [1, \"timer\"], [1, \"question-container\"], [1, \"question\"], [1, \"video-container\"], [\"autoplay\", \"\"], [3, \"click\"]],\n        template: function InterviewComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 3)(4, \"h3\");\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"p\", 4);\n            i0.ɵɵtext(7);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"div\", 5);\n            i0.ɵɵelement(9, \"video\", 6, 0);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"button\", 7);\n            i0.ɵɵlistener(\"click\", function InterviewComponent_Template_button_click_11_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.nextQuestion());\n            });\n            i0.ɵɵtext(12, \"Next Question\");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\"Time Remaining: \", ctx.timeRemaining, \"s\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\"Question \", ctx.currentQuestionIndex + 1, \" of 5\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.selectedQuestions[ctx.currentQuestionIndex]);\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return InterviewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}