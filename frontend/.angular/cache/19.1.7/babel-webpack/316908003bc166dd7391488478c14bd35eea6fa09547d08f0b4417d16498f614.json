{"ast":null,"code":"import _asyncToGenerator from \"D:/ai-recruiter/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst _c0 = [\"videoElement\"];\nfunction InterviewComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"p\");\n    i0.ɵɵtext(2, \"Take your time to prepare your answer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function InterviewComponent_div_8_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.skipPreparation());\n    });\n    i0.ɵɵtext(4, \"Start Answering\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let InterviewComponent = /*#__PURE__*/(() => {\n  class InterviewComponent {\n    constructor(router) {\n      this.router = router;\n      this.questions = ['Tell us about yourself', 'What are your greatest strengths?', 'Where do you see yourself in 5 years?', 'Why should we hire you?', 'What is your biggest achievement?', 'How do you handle stress?', 'What are your salary expectations?', 'Why do you want to work here?'];\n      this.currentQuestionIndex = 0;\n      this.selectedQuestions = [];\n      this.timeRemaining = 30; // Prep time\n      this.answerTimeRemaining = 60; // Answer time\n      this.isPreparationTime = true;\n      this.mediaStream = null;\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.selectRandomQuestions();\n        _this.startPrepTimer();\n        yield _this.setupCamera();\n      })();\n    }\n    setupCamera() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          _this2.mediaStream = yield navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: true\n          });\n          _this2.videoElement.nativeElement.srcObject = _this2.mediaStream;\n        } catch (err) {\n          console.error('Failed to setup camera:', err);\n        }\n      })();\n    }\n    selectRandomQuestions() {\n      this.selectedQuestions = this.questions.sort(() => 0.5 - Math.random()).slice(0, 5);\n    }\n    startPrepTimer() {\n      this.timeRemaining = 30;\n      this.isPreparationTime = true;\n      this.timerInterval = setInterval(() => {\n        this.timeRemaining--;\n        if (this.timeRemaining <= 0) {\n          clearInterval(this.timerInterval);\n          this.startAnswerTimer();\n        }\n      }, 1000);\n    }\n    startAnswerTimer() {\n      this.timeRemaining = 60;\n      this.isPreparationTime = false;\n      this.timerInterval = setInterval(() => {\n        this.timeRemaining--;\n        if (this.timeRemaining <= 0) {\n          this.nextQuestion();\n        }\n      }, 1000);\n    }\n    nextQuestion() {\n      clearInterval(this.timerInterval);\n      if (this.currentQuestionIndex < 4) {\n        this.currentQuestionIndex++;\n        this.startPrepTimer();\n      } else {\n        if (this.mediaStream) {\n          this.mediaStream.getTracks().forEach(track => track.stop());\n        }\n        this.router.navigate(['/interview-complete']);\n      }\n    }\n    skipPreparation() {\n      clearInterval(this.timerInterval);\n      this.startAnswerTimer();\n    }\n    ngOnDestroy() {\n      clearInterval(this.timerInterval);\n      if (this.mediaStream) {\n        this.mediaStream.getTracks().forEach(track => track.stop());\n      }\n    }\n    static {\n      this.ɵfac = function InterviewComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || InterviewComponent)(i0.ɵɵdirectiveInject(i1.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: InterviewComponent,\n        selectors: [[\"app-interview\"]],\n        viewQuery: function InterviewComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.videoElement = _t.first);\n          }\n        },\n        decls: 14,\n        vars: 8,\n        consts: [[\"videoElement\", \"\"], [1, \"interview-container\"], [1, \"timer\"], [1, \"question-container\"], [1, \"question\"], [\"class\", \"preparation-notice\", 4, \"ngIf\"], [1, \"video-container\"], [\"autoplay\", \"\"], [1, \"next-button\", 3, \"click\", \"disabled\"], [1, \"preparation-notice\"], [1, \"skip-prep\", 3, \"click\"]],\n        template: function InterviewComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 3)(4, \"h3\");\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"p\", 4);\n            i0.ɵɵtext(7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(8, InterviewComponent_div_8_Template, 5, 0, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 6);\n            i0.ɵɵelement(10, \"video\", 7, 0);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"button\", 8);\n            i0.ɵɵlistener(\"click\", function InterviewComponent_Template_button_click_12_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.nextQuestion());\n            });\n            i0.ɵɵtext(13, \" Next Question \");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"prep-timer\", ctx.isPreparationTime);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate2(\" \", ctx.isPreparationTime ? \"Preparation Time: \" : \"Answer Time: \", \" \", ctx.timeRemaining, \"s \");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\"Question \", ctx.currentQuestionIndex + 1, \" of 5\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.selectedQuestions[ctx.currentQuestionIndex]);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isPreparationTime);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", ctx.isPreparationTime);\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return InterviewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}