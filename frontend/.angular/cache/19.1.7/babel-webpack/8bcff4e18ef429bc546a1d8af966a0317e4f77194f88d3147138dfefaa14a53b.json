{"ast":null,"code":"import _asyncToGenerator from \"D:/ai-recruiter/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let InterviewSetupComponent = /*#__PURE__*/(() => {\n  class InterviewSetupComponent {\n    constructor(router) {\n      this.router = router;\n      this.deviceChecks = {\n        camera: false,\n        microphone: false,\n        network: false\n      };\n      this.checkingDevices = true;\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield _this.checkDevices();\n        _this.checkingDevices = false;\n      })();\n    }\n    checkDevices() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        // Check camera\n        try {\n          const stream = yield navigator.mediaDevices.getUserMedia({\n            video: true\n          });\n          _this2.deviceChecks.camera = true;\n          stream.getTracks().forEach(track => track.stop());\n        } catch (err) {\n          console.error('Camera check failed:', err);\n          _this2.deviceChecks.camera = false;\n        }\n        // Check microphone\n        try {\n          const stream = yield navigator.mediaDevices.getUserMedia({\n            audio: true\n          });\n          _this2.deviceChecks.microphone = true;\n          stream.getTracks().forEach(track => track.stop());\n        } catch (err) {\n          console.error('Microphone check failed:', err);\n          _this2.deviceChecks.microphone = false;\n        }\n        // Check network speed\n        try {\n          const connection = navigator.connection;\n          _this2.deviceChecks.network = connection.downlink >= 1;\n        } catch (err) {\n          console.error('Network check failed:', err);\n          _this2.deviceChecks.network = true;\n        }\n      })();\n    }\n    startInterview() {\n      if (this.allChecksPass()) {\n        this.router.navigate(['/interview']);\n      }\n    }\n    allChecksPass() {\n      return this.deviceChecks.camera && this.deviceChecks.microphone && this.deviceChecks.network;\n    }\n    retryChecks() {\n      this.checkingDevices = true;\n      this.checkDevices().then(() => {\n        this.checkingDevices = false;\n      });\n    }\n    static {\n      this.ɵfac = function InterviewSetupComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || InterviewSetupComponent)(i0.ɵɵdirectiveInject(i1.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: InterviewSetupComponent,\n        selectors: [[\"app-interview-setup\"]],\n        decls: 2,\n        vars: 0,\n        template: function InterviewSetupComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"p\");\n            i0.ɵɵtext(1, \"interview-setup works!\");\n            i0.ɵɵelementEnd();\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return InterviewSetupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}