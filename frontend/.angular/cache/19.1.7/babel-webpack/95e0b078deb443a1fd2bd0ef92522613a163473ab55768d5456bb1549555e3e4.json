{"ast":null,"code":"import _asyncToGenerator from \"D:/ai-recruiter/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let InterviewSetupComponent = /*#__PURE__*/(() => {\n  class InterviewSetupComponent {\n    constructor(router) {\n      this.router = router;\n      this.deviceChecks = {\n        camera: false,\n        microphone: false,\n        network: false\n      };\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield _this.checkDevices();\n      })();\n    }\n    checkDevices() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        // Check camera\n        try {\n          const stream = yield navigator.mediaDevices.getUserMedia({\n            video: true\n          });\n          _this2.deviceChecks.camera = true;\n          stream.getTracks().forEach(track => track.stop());\n        } catch (err) {\n          _this2.deviceChecks.camera = false;\n        }\n        // Check microphone\n        try {\n          const stream = yield navigator.mediaDevices.getUserMedia({\n            audio: true\n          });\n          _this2.deviceChecks.microphone = true;\n          stream.getTracks().forEach(track => track.stop());\n        } catch (err) {\n          _this2.deviceChecks.microphone = false;\n        }\n        // Check network speed\n        try {\n          const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n          if (connection && typeof connection.downlink === 'number') {\n            _this2.deviceChecks.network = connection.downlink >= 1; // Minimum 1 Mbps\n          } else {\n            _this2.deviceChecks.network = true; // Fallback if downlink information is not available\n          }\n        } catch (err) {\n          _this2.deviceChecks.network = true; // Fallback if Network API is not supported\n        }\n      })();\n    }\n    startInterview() {\n      if (this.deviceChecks.camera && this.deviceChecks.microphone && this.deviceChecks.network) {\n        this.router.navigate(['/interview']);\n      }\n    }\n    static {\n      this.ɵfac = function InterviewSetupComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || InterviewSetupComponent)(i0.ɵɵdirectiveInject(i1.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: InterviewSetupComponent,\n        selectors: [[\"app-interview-setup\"]],\n        decls: 21,\n        vars: 13,\n        consts: [[1, \"setup-container\"], [1, \"device-checks\"], [1, \"check-item\"], [1, \"fas\", \"fa-camera\"], [1, \"status\"], [1, \"fas\", \"fa-microphone\"], [1, \"fas\", \"fa-wifi\"], [3, \"click\", \"disabled\"]],\n        template: function InterviewSetupComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Interview Setup\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"span\");\n            i0.ɵɵelement(6, \"i\", 3);\n            i0.ɵɵtext(7, \" Camera Access \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(8, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 2)(10, \"span\");\n            i0.ɵɵelement(11, \"i\", 5);\n            i0.ɵɵtext(12, \" Microphone Access \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(13, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"div\", 2)(15, \"span\");\n            i0.ɵɵelement(16, \"i\", 6);\n            i0.ɵɵtext(17, \" Network Connection \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(18, \"div\", 4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(19, \"button\", 7);\n            i0.ɵɵlistener(\"click\", function InterviewSetupComponent_Template_button_click_19_listener() {\n              return ctx.startInterview();\n            });\n            i0.ɵɵtext(20, \" Start Interview \");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(8);\n            i0.ɵɵclassProp(\"success\", ctx.deviceChecks.camera)(\"error\", !ctx.deviceChecks.camera);\n            i0.ɵɵadvance(5);\n            i0.ɵɵclassProp(\"success\", ctx.deviceChecks.microphone)(\"error\", !ctx.deviceChecks.microphone);\n            i0.ɵɵadvance(5);\n            i0.ɵɵclassProp(\"success\", ctx.deviceChecks.network)(\"error\", !ctx.deviceChecks.network);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", !ctx.deviceChecks.camera || !ctx.deviceChecks.microphone || !ctx.deviceChecks.network);\n          }\n        },\n        styles: [\".setup-container[_ngcontent-%COMP%]{max-width:600px;margin:2rem auto;padding:2rem;border-radius:8px;box-shadow:0 2px 4px #0000001a}.setup-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:2rem}.device-checks[_ngcontent-%COMP%]{margin-bottom:2rem}.check-item[_ngcontent-%COMP%]{display:flex;align-items:center;margin-bottom:1rem;padding:1rem;background-color:#f8f9fa;border-radius:4px}.check-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{flex:1}.check-item[_ngcontent-%COMP%]   .status[_ngcontent-%COMP%]{width:20px;height:20px;border-radius:50%;margin-left:1rem}.check-item[_ngcontent-%COMP%]   .status.success[_ngcontent-%COMP%]{background-color:#28a745}.check-item[_ngcontent-%COMP%]   .status.error[_ngcontent-%COMP%]{background-color:#dc3545}button[_ngcontent-%COMP%]{width:100%;padding:1rem;background-color:#007bff;color:#fff;border:none;border-radius:4px;cursor:pointer}button[_ngcontent-%COMP%]:disabled{background-color:#6c757d;cursor:not-allowed}button[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#0056b3}\"]\n      });\n    }\n  }\n  return InterviewSetupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}