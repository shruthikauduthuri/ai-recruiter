{"ast":null,"code":"import _asyncToGenerator from \"D:/ai-recruiter/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { InterviewService } from '../services/interview.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/interview.service\";\nconst _c0 = [\"videoElement\"];\nexport let InterviewComponent = /*#__PURE__*/(() => {\n  class InterviewComponent {\n    constructor(router, interviewService) {\n      this.router = router;\n      this.interviewService = interviewService;\n      this.currentQuestionIndex = 0;\n      this.questions = [];\n      this.timeRemaining = 60;\n      this.mediaStream = null;\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.questions = _this.interviewService.getQuestions();\n        _this.startTimer();\n        yield _this.setupCamera();\n      })();\n    }\n    setupCamera() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          _this2.mediaStream = yield navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: true\n          });\n          _this2.videoElement.nativeElement.srcObject = _this2.mediaStream;\n        } catch (err) {\n          console.error('Failed to setup camera:', err);\n          alert('Failed to access camera. Please check your permissions.');\n        }\n      })();\n    }\n    startTimer() {\n      this.timeRemaining = 60;\n      this.timerInterval = setInterval(() => {\n        this.timeRemaining--;\n        if (this.timeRemaining <= 0) {\n          this.nextQuestion();\n        }\n      }, 1000);\n    }\n    nextQuestion() {\n      clearInterval(this.timerInterval);\n      if (this.currentQuestionIndex < 4) {\n        this.currentQuestionIndex++;\n        this.startTimer();\n      } else {\n        this.endInterview();\n      }\n    }\n    endInterview() {\n      if (this.mediaStream) {\n        this.mediaStream.getTracks().forEach(track => track.stop());\n      }\n      this.router.navigate(['/interview-complete']);\n    }\n    ngOnDestroy() {\n      clearInterval(this.timerInterval);\n      if (this.mediaStream) {\n        this.mediaStream.getTracks().forEach(track => track.stop());\n      }\n    }\n    static {\n      this.ɵfac = function InterviewComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || InterviewComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.InterviewService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: InterviewComponent,\n        selectors: [[\"app-interview\"]],\n        viewQuery: function InterviewComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.videoElement = _t.first);\n          }\n        },\n        decls: 2,\n        vars: 0,\n        template: function InterviewComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"p\");\n            i0.ɵɵtext(1, \"interview works!\");\n            i0.ɵɵelementEnd();\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return InterviewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}