{"ast":null,"code":"import _asyncToGenerator from \"D:/ai-recruiter/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst _c0 = [\"videoElement\"];\nfunction InterviewSetupComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"i\", 13);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Camera access required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let InterviewSetupComponent = /*#__PURE__*/(() => {\n  class InterviewSetupComponent {\n    constructor(router) {\n      this.router = router;\n      this.deviceChecks = {\n        camera: false,\n        microphone: false,\n        network: false\n      };\n      this.checkingDevices = true;\n      this.mediaStream = null;\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield _this.checkDevices();\n        _this.checkingDevices = false;\n      })();\n    }\n    checkDevices() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        // Check camera and start preview\n        try {\n          _this2.mediaStream = yield navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: true\n          });\n          _this2.deviceChecks.camera = true;\n          // Set video stream to preview\n          if (_this2.videoElement && _this2.videoElement.nativeElement) {\n            _this2.videoElement.nativeElement.srcObject = _this2.mediaStream;\n          }\n          // Check microphone (already granted with getUserMedia)\n          _this2.deviceChecks.microphone = true;\n        } catch (err) {\n          console.error('Device check failed:', err);\n          _this2.deviceChecks.camera = false;\n          _this2.deviceChecks.microphone = false;\n        }\n        // Check network speed using fetch API\n        try {\n          const startTime = performance.now();\n          yield fetch('https://www.google.com/favicon.ico');\n          const endTime = performance.now();\n          const duration = endTime - startTime;\n          _this2.deviceChecks.network = duration < 1000; // Consider connection good if response time is less than 1 second\n        } catch (err) {\n          console.error('Network check failed:', err);\n          _this2.deviceChecks.network = false;\n        }\n      })();\n    }\n    startInterview() {\n      if (this.allChecksPass()) {\n        // Stop the preview stream before navigating\n        if (this.mediaStream) {\n          this.mediaStream.getTracks().forEach(track => track.stop());\n        }\n        this.router.navigate(['/interview']);\n      }\n    }\n    allChecksPass() {\n      return this.deviceChecks.camera && this.deviceChecks.microphone && this.deviceChecks.network;\n    }\n    ngOnDestroy() {\n      // Clean up: stop all tracks when component is destroyed\n      if (this.mediaStream) {\n        this.mediaStream.getTracks().forEach(track => track.stop());\n      }\n    }\n    static {\n      this.ɵfac = function InterviewSetupComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || InterviewSetupComponent)(i0.ɵɵdirectiveInject(i1.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: InterviewSetupComponent,\n        selectors: [[\"app-interview-setup\"]],\n        viewQuery: function InterviewSetupComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.videoElement = _t.first);\n          }\n        },\n        decls: 25,\n        vars: 14,\n        consts: [[\"videoElement\", \"\"], [1, \"setup-container\"], [1, \"video-preview\"], [\"autoplay\", \"\", \"playsinline\", \"\", \"muted\", \"\"], [\"class\", \"camera-overlay\", 4, \"ngIf\"], [1, \"device-checks\"], [1, \"check-item\"], [1, \"fas\", \"fa-camera\"], [1, \"status\"], [1, \"fas\", \"fa-microphone\"], [1, \"fas\", \"fa-wifi\"], [3, \"click\", \"disabled\"], [1, \"camera-overlay\"], [1, \"fas\", \"fa-camera-slash\"]],\n        template: function InterviewSetupComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n            i0.ɵɵtext(2, \"Interview Setup\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 2);\n            i0.ɵɵelement(4, \"video\", 3, 0);\n            i0.ɵɵtemplate(6, InterviewSetupComponent_div_6_Template, 4, 0, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"span\");\n            i0.ɵɵelement(10, \"i\", 7);\n            i0.ɵɵtext(11, \" Camera Access \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"div\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"div\", 6)(14, \"span\");\n            i0.ɵɵelement(15, \"i\", 9);\n            i0.ɵɵtext(16, \" Microphone Access \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(17, \"div\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(18, \"div\", 6)(19, \"span\");\n            i0.ɵɵelement(20, \"i\", 10);\n            i0.ɵɵtext(21, \" Network Connection \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(22, \"div\", 8);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(23, \"button\", 11);\n            i0.ɵɵlistener(\"click\", function InterviewSetupComponent_Template_button_click_23_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.startInterview());\n            });\n            i0.ɵɵtext(24, \" Start Interview \");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngIf\", !ctx.deviceChecks.camera);\n            i0.ɵɵadvance(6);\n            i0.ɵɵclassProp(\"success\", ctx.deviceChecks.camera)(\"error\", !ctx.deviceChecks.camera);\n            i0.ɵɵadvance(5);\n            i0.ɵɵclassProp(\"success\", ctx.deviceChecks.microphone)(\"error\", !ctx.deviceChecks.microphone);\n            i0.ɵɵadvance(5);\n            i0.ɵɵclassProp(\"success\", ctx.deviceChecks.network)(\"error\", !ctx.deviceChecks.network);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", !ctx.deviceChecks.camera || !ctx.deviceChecks.microphone || !ctx.deviceChecks.network);\n          }\n        },\n        styles: [\".setup-container[_ngcontent-%COMP%]{max-width:800px;margin:2rem auto;padding:1.5rem;display:flex;flex-direction:column;align-items:center;gap:1.5rem}.setup-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{color:#333;font-size:1.5rem;font-weight:500;margin-bottom:1rem}.video-preview[_ngcontent-%COMP%]{width:100%;max-width:640px;aspect-ratio:16/9;background-color:#f0f0f0;border-radius:8px;overflow:hidden;margin-bottom:1rem}.video-preview[_ngcontent-%COMP%]   video[_ngcontent-%COMP%]{width:100%;height:100%;object-fit:cover;transform:scaleX(-1)}.device-checks[_ngcontent-%COMP%]{width:100%;max-width:640px;display:flex;flex-direction:column;gap:.75rem}.check-item[_ngcontent-%COMP%]{display:flex;align-items:center;padding:.75rem;background-color:#fff;border-radius:4px;border:1px solid #e0e0e0}.check-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem;color:#333;font-size:.9rem}.check-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:1rem;color:#666}.check-item[_ngcontent-%COMP%]   .status[_ngcontent-%COMP%]{width:12px;height:12px;border-radius:50%;margin-left:auto}.check-item[_ngcontent-%COMP%]   .status.success[_ngcontent-%COMP%]{background-color:#22c55e}.check-item[_ngcontent-%COMP%]   .status.error[_ngcontent-%COMP%]{background-color:#ef4444}button[_ngcontent-%COMP%]{width:100%;max-width:640px;padding:.75rem;background-color:#6b7280;color:#fff;border:none;border-radius:4px;cursor:pointer;font-size:.9rem;transition:background-color .2s}button[_ngcontent-%COMP%]:not(:disabled){background-color:#4b5563}button[_ngcontent-%COMP%]:not(:disabled):hover{background-color:#374151}button[_ngcontent-%COMP%]:disabled{opacity:.7;cursor:not-allowed}.camera-overlay[_ngcontent-%COMP%]{position:absolute;inset:0;background:#000000b3;display:flex;flex-direction:column;align-items:center;justify-content:center;color:#fff}.camera-overlay[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:2rem;margin-bottom:.5rem}.camera-overlay[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:1rem}@media (max-width: 768px){.setup-container[_ngcontent-%COMP%]{margin:1rem;padding:1rem}h2[_ngcontent-%COMP%]{font-size:1.25rem}.check-item[_ngcontent-%COMP%]{padding:.5rem}.check-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:.85rem}button[_ngcontent-%COMP%]{padding:.6rem;font-size:.85rem}}\"]\n      });\n    }\n  }\n  return InterviewSetupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}